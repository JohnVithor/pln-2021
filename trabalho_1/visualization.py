import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt

unigram = pd.read_csv('resultados_unigram_val.csv', index_col=0)
unigram = unigram.div(unigram.sum(axis=1), axis=0)
unigram.fillna(0, inplace=True)
fig, ax = plt.subplots(figsize=(12,10))
sns.heatmap(unigram, ax=ax)
plt.tight_layout()
plt.savefig("resultados_unigram_val.png", bbox_inches='tight')
plt.clf()

unigram = pd.read_csv('metrics_unigram_val.csv', index_col=0)
unigram.iloc[:, 4].plot.barh(figsize=(10, 10))
plt.margins(x=0.1)
plt.xticks([0, 0.5, 1.0], fontsize=14)
plt.yticks(fontsize=14)
for j, v in enumerate(unigram.iloc[:, 4]):
    plt.text(v + 0.001, j - .11, "{:.3f}".format(v), color='black', size=13)
plt.tight_layout()
plt.savefig("recall_unigram_val.png", bbox_inches='tight')
plt.clf()

unigram.iloc[:, 8].plot.barh(figsize=(10, 10))
plt.margins(x=0.1)
plt.xticks([0, 0.5, 1.0], fontsize=14)
plt.yticks(fontsize=14)
for j, v in enumerate(unigram.iloc[:, 8]):
    plt.text(v + 0.001, j - .11, "{:.3f}".format(v), color='black', size=13)
plt.tight_layout()
plt.savefig("precision_unigram_val.png", bbox_inches='tight')
plt.clf()

unigram = pd.read_csv('resultados_unigram_test.csv', index_col=0)
unigram = unigram.div(unigram.sum(axis=1), axis=0)
unigram.fillna(0, inplace=True)
fig, ax = plt.subplots(figsize=(12,10))
sns.heatmap(unigram, ax=ax)
plt.tight_layout()
plt.savefig("resultados_unigram_test.png", bbox_inches='tight')
plt.clf()

unigram = pd.read_csv('metrics_unigram_test.csv', index_col=0)
unigram.iloc[:, 4].plot.barh(figsize=(10, 10))
plt.margins(x=0.1)
plt.xticks([0, 0.5, 1.0], fontsize=14)
plt.yticks(fontsize=14)
for j, v in enumerate(unigram.iloc[:, 4]):
    plt.text(v + 0.001, j - .11, "{:.3f}".format(v), color='black', size=13)
plt.tight_layout()
plt.savefig("recall_unigram_test.png", bbox_inches='tight')
plt.clf()

unigram.iloc[:, 8].plot.barh(figsize=(10, 10))
plt.margins(x=0.1)
plt.xticks([0, 0.5, 1.0], fontsize=14)
plt.yticks(fontsize=14)
for j, v in enumerate(unigram.iloc[:, 8]):
    plt.text(v + 0.001, j - .11, "{:.3f}".format(v), color='black', size=13)
plt.tight_layout()
plt.savefig("precision_unigram_test.png", bbox_inches='tight')
plt.clf()

bigram = pd.read_csv('resultados_bigram_val.csv', index_col=0)
bigram = bigram.div(bigram.sum(axis=1), axis=0)
bigram.fillna(0, inplace=True)
fig, ax = plt.subplots(figsize=(12,10))
sns.heatmap(bigram, ax=ax)
plt.tight_layout()
plt.savefig("resultados_bigram_val.png", bbox_inches='tight')
plt.clf()

bigram = pd.read_csv('metrics_bigram_val.csv', index_col=0)
bigram.iloc[:, 4].plot.barh(figsize=(10, 10))
plt.margins(x=0.1)
plt.xticks([0, 0.5, 1.0], fontsize=14)
plt.yticks(fontsize=14)
for j, v in enumerate(bigram.iloc[:, 4]):
    plt.text(v + 0.001, j - .11, "{:.3f}".format(v), color='black', size=13)
plt.tight_layout()
plt.savefig("recall_bigram_val.png", bbox_inches='tight')
plt.clf()

bigram.iloc[:, 8].plot.barh(figsize=(10, 10))
plt.margins(x=0.1)
plt.xticks([0, 0.5, 1.0], fontsize=14)
plt.yticks(fontsize=14)
for j, v in enumerate(bigram.iloc[:, 8]):
    plt.text(v + 0.001, j - .11, "{:.3f}".format(v), color='black', size=13)
plt.tight_layout()
plt.savefig("precision_bigram_val.png", bbox_inches='tight')
plt.clf()

bigram = pd.read_csv('resultados_bigram_test.csv', index_col=0)
bigram = bigram.div(bigram.sum(axis=1), axis=0)
bigram.fillna(0, inplace=True)
fig, ax = plt.subplots(figsize=(12,10))
sns.heatmap(bigram, ax=ax)
plt.tight_layout()
plt.savefig("resultados_bigram_test.png", bbox_inches='tight')
plt.clf()

bigram = pd.read_csv('metrics_bigram_test.csv', index_col=0)
bigram.iloc[:, 4].plot.barh(figsize=(10, 10))
plt.margins(x=0.1)
plt.xticks([0, 0.5, 1.0], fontsize=14)
plt.yticks(fontsize=14)
for j, v in enumerate(bigram.iloc[:, 4]):
    plt.text(v + 0.001, j - .11, "{:.3f}".format(v), color='black', size=13)
plt.tight_layout()
plt.savefig("recall_bigram_test.png", bbox_inches='tight')
plt.clf()

bigram.iloc[:, 8].plot.barh(figsize=(10, 10))
plt.margins(x=0.1)
plt.xticks([0, 0.5, 1.0], fontsize=14)
plt.yticks(fontsize=14)
for j, v in enumerate(bigram.iloc[:, 8]):
    plt.text(v + 0.001, j - .11, "{:.3f}".format(v), color='black', size=13)
plt.tight_layout()
plt.savefig("precision_bigram_test.png", bbox_inches='tight')
plt.clf()